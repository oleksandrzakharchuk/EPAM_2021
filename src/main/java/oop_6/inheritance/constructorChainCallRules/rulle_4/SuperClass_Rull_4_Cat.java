package oop_6.inheritance.constructorChainCallRules.rulle_4;
//Детализуем порядок инициализации класса при создании его объекта. Как вы уже знаете, первый шаг – это рекурсивное выполнение конструкторов. Другими словами, при создании объекта подкласса происходит раскручивание цепочки конструкторов суперклассов и их выполнение.

public class SuperClass_Rull_4_Cat {
    static class SubClass extends SuperClass_Rull_4_Cat {
    }

    public static class Main {
        public static void main(String[] arg) {
            SubClass c = new SubClass();
        }
    }
}
//[](![img_4.png](img_4.png))
//если в подклассе объявить поле с тем же именем, что и в суперклассе, оно будет скрыто. Давайте разберемся, почему делать это не рекомендуется.

//Если поле подкласса имеет то же имя, что и унаследованное поле суперкласса, то оно скрывает/затеняет область видимости поля суперкласса, даже если их типы различаются.

//Сокрытие/затенение полей использовать не рекомендуется, так как это делает код трудночитаемым.

//Для обращения к полю суперкласса в подклассе используется ключевое слово super. Это вторая форма применения ключевого слова super – как ссылки на объект суперкласса в теле подкласса. Она имеет следующий синтаксис: super.<поле экземпляра/метод экземпляра>;