package meetPractise_4;
/*реализуйте метод multiply.

Метод принимает в качестве параметра прямоугольный целочисленный массив (матрицу) и возвращает его транспонированным.

Рассмотрим целочисленную матрицу, представленную в виде прямоугольного массива. Задача состоит в том, чтобы транспонировать ее по главной диагонали.

Результат транспонирования матрицы – это перевернутая по главной дагонали версия исходной матрицы.*
/
для получения транспонированной матрицы из исходной нужно каждую строчку исходной матрицы записать в виде столбца в том же порядке.
Ввод:

{
    {0, 1, 2},
    {3, 4, 5},
    {6, 7, 8}
}
Вывод в консоли:
{

    {0, 3, 6},

    {1, 4, 7},

    {2, 5, 8}

}
 */

public class MeetPractise_4_MatrixTransposition {
    public static void main(String[] args) {

        // часть 1 - создаем матрицу n на n и заполняем ее значениями с помошью цикла.
        int n = 3;
        int[][] a = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = n*i + j;//выражение " a[i][j] = n*i + j " просто заполняет массив по порядку числами , начиная с 0.
            }
        }

        // часть 2 - выводит на экран начальную матрицу
        System.out.println("Начальная матрица");
        System.out.println("------");
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.printf("%4d", a[i][j]);//выводит на экран двухмерную матрицу с помощью двух массивов. "%4d" значит "4 пробела". Так, "%3d" - это 3 пробела,  "%6d" - 6 пробелов, и т.д.
            }
            System.out.println();
        }

        // часть 3 - транспонирование матрицы Это "переворачивание" матрицы:
        for (int i = 0; i < n; i++) {
            for (int j = i+1; j < n; j++) {
                int temp = a[i][j];
                a[i][j] = a[j][i];//a[i][j] и a[j][i] меняются местами с помощью переменной temp (temporary - временный).
                a[j][i] = temp;

            }
        }

        // часть 4 - выводит на экран транспонированную матрицу во время транспонирования номер столбца и номер строки "меняются местами". Например, было a[1] [9], стало a[9][1]. И так со всеми элементами (a[2] [2], конечно, остается a[2][2]).
        System.out.println();
        System.out.println("Новая матрица");
        System.out.println("------");
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.printf("%3d", a[i][j]);
            }
            System.out.println();
        }

    }
}

/*Начальная матрица
------
   0   1   2
   3   4   5
   6   7   8

Новая матрица
------
  0  3  6
  1  4  7
  2  5  8
*/