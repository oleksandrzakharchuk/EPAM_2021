package interfais_7.functionalInterfaces;
//Функциональными интерфейсами в Java называют интерфейсы, имеющие только один абстрактный метод. Наряду с таким методом в интерфейсе может быть любое количество методов по умолчанию и статических методов.
//
//Функциональные интерфейсы отмечаются аннотацией @FunctionalInterface. Это необязательно, хотя отмеченные таким образом интерфейсы дают четкое понимание, как их можно использовать. Функциональные интерфейсы используются лямбда-выражениями и Stream API, которые появились с Java 8. Например, интерфейс Comparator стал функциональным интерфейсом.
//
//Основные функциональные интерфейсы размещены в пакете java.util.function. Все функциональные интерфейсы можно разделить на 4 группы: Function, Predicate, Consumer, Supplier. Все остальные интерфейсы пакета представляют собой производные от перечисленных.

@FunctionalInterface
public interface ShapeService {
    double perimeter(double a, double b);
}
//Методы по умолчанию отмечаются ключевым словом default и должны иметь тело. Класс не обязан переопределять тело такого метода. При ромбовидной проблеме во избежание ошибки компиляции класс должен предоставлять общую реализацию методов по умолчанию.

//Статические методы отмечаются ключевым словом static и обязаны иметь реализацию. Такие методы принадлежат интерфейсу, не могут быть переопределенными в классе, реализующем интерфейс.

//Функциональными интерфейсами в Java называют интерфейсы, имеющие только один абстрактный метод. Наряду с таким методом в интерфейсе может быть любое количество методов по умолчанию и статических методов.